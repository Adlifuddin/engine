# Generated by Django 3.1.5 on 2021-01-12 05:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0006_delete_tablename'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTarget',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('apac', models.IntegerField()),
                ('emea', models.IntegerField()),
                ('na', models.IntegerField()),
                ('anzo', models.IntegerField()),
            ],
            options={
                'db_table': 'account_target',
            },
        ),
        migrations.CreateModel(
            name='Fb7Days',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('engaged_user', models.FloatField()),
                ('page_impressions', models.FloatField()),
                ('total_page_like', models.FloatField()),
                ('fb_new_page', models.FloatField()),
            ],
            options={
                'db_table': 'fb7days',
            },
        ),
        migrations.CreateModel(
            name='FbengageduserImpressions',
            fields=[
                ('item', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('currents', models.FloatField()),
                ('previous', models.FloatField()),
                ('percentage', models.FloatField()),
            ],
            options={
                'db_table': 'fbengageduser_impressions',
            },
        ),
        migrations.CreateModel(
            name='Fbpagelike',
            fields=[
                ('item', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('current_fb_page_likes', models.FloatField()),
                ('previous_fb_page_likes', models.FloatField()),
                ('fb_page_likes_percentage', models.FloatField()),
                ('new_fb_page_likes', models.FloatField()),
                ('new_fb_page_previous_likes', models.FloatField()),
                ('fb_newpage_percentage', models.FloatField()),
            ],
            options={
                'db_table': 'fbpagelike',
            },
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('plan_amount', models.FloatField()),
                ('vs_last_year', models.CharField(max_length=50)),
                ('amount_last_year', models.FloatField()),
            ],
            options={
                'db_table': 'finance',
            },
        ),
        migrations.CreateModel(
            name='Gaaudiencemetric',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('users', models.IntegerField()),
                ('sessions', models.IntegerField()),
                ('page_views', models.IntegerField()),
            ],
            options={
                'db_table': 'gaaudiencemetric',
            },
        ),
        migrations.CreateModel(
            name='Gabounce',
            fields=[
                ('status_bounce', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('value_bounce', models.FloatField()),
            ],
            options={
                'db_table': 'gabounce',
            },
        ),
        migrations.CreateModel(
            name='Gachannel',
            fields=[
                ('channel', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sessions', models.FloatField()),
                ('previous_period', models.FloatField()),
                ('changes', models.FloatField()),
            ],
            options={
                'db_table': 'gachannel',
            },
        ),
        migrations.CreateModel(
            name='GachannelGoal',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('organic_search_trend', models.FloatField()),
                ('display_trend', models.FloatField()),
                ('direct_trend', models.FloatField()),
                ('paid_search_trend', models.FloatField()),
                ('referral_trend', models.FloatField()),
                ('contact_us_trend', models.FloatField()),
                ('proposal_trend', models.FloatField()),
                ('proposal_step2_trend', models.FloatField()),
                ('call_in_trend', models.FloatField()),
            ],
            options={
                'db_table': 'gachannel_goal',
            },
        ),
        migrations.CreateModel(
            name='Gagoal',
            fields=[
                ('goal', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('completions', models.FloatField()),
                ('conversions_rate', models.FloatField()),
                ('previous_period', models.FloatField()),
                ('changes', models.FloatField()),
            ],
            options={
                'db_table': 'gagoal',
            },
        ),
        migrations.CreateModel(
            name='Ganewsessions',
            fields=[
                ('status', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'ganewsessions',
            },
        ),
        migrations.CreateModel(
            name='Gapageviews',
            fields=[
                ('status', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'gapageviews',
            },
        ),
        migrations.CreateModel(
            name='Gapageviewstarget',
            fields=[
                ('target', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'gapageviewstarget',
            },
        ),
        migrations.CreateModel(
            name='Gaperformancemetric',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('bounce_rate_avg', models.FloatField()),
                ('page_views', models.FloatField()),
                ('new_sessions', models.FloatField()),
            ],
            options={
                'db_table': 'gaperformancemetric',
            },
        ),
        migrations.CreateModel(
            name='Garegions',
            fields=[
                ('top_regions', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sessions', models.IntegerField()),
            ],
            options={
                'db_table': 'garegions',
            },
        ),
        migrations.CreateModel(
            name='Gasessionsbydevicetype',
            fields=[
                ('equipment', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('percentage', models.FloatField()),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'gasessionsbydevicetype',
            },
        ),
        migrations.CreateModel(
            name='Gasessiontarget',
            fields=[
                ('targets', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('target_value', models.FloatField()),
            ],
            options={
                'db_table': 'gasessiontarget',
            },
        ),
        migrations.CreateModel(
            name='Gausertarget',
            fields=[
                ('targets', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('target_value', models.FloatField()),
            ],
            options={
                'db_table': 'gausertarget',
            },
        ),
        migrations.CreateModel(
            name='GrossProfitMargin',
            fields=[
                ('months', models.DateField(primary_key=True, serialize=False)),
                ('year2017', models.FloatField()),
                ('year2018', models.FloatField()),
                ('year2019', models.FloatField()),
                ('year2020', models.FloatField()),
            ],
            options={
                'db_table': 'gross_profit_margin',
            },
        ),
        migrations.CreateModel(
            name='Hr',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('year2020', models.FloatField()),
                ('year2019', models.FloatField()),
                ('projection_year2020', models.FloatField()),
            ],
            options={
                'db_table': 'hr',
            },
        ),
        migrations.CreateModel(
            name='Linkedin',
            fields=[
                ('follower_last_month', models.FloatField(primary_key=True, serialize=False)),
                ('follower_prev_month', models.FloatField()),
                ('follower_percentage', models.FloatField()),
                ('engagement_last_month', models.FloatField()),
                ('engagement_prev_month', models.FloatField()),
                ('engagement_percentage', models.FloatField()),
                ('clicks_last_month', models.FloatField()),
                ('clicks_prev_month', models.FloatField()),
                ('clicks_percentage', models.FloatField()),
            ],
            options={
                'db_table': 'linkedin',
            },
        ),
        migrations.CreateModel(
            name='LinkedinClick',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('followers', models.IntegerField()),
                ('engagement', models.FloatField()),
                ('clicks', models.IntegerField()),
            ],
            options={
                'db_table': 'linkedin_click',
            },
        ),
        migrations.CreateModel(
            name='Marketing',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('plan_amount', models.FloatField()),
                ('vs_last_year', models.CharField(max_length=50)),
                ('amount_last_year', models.FloatField()),
            ],
            options={
                'db_table': 'marketing',
            },
        ),
        migrations.CreateModel(
            name='MonthlySalesDashboard',
            fields=[
                ('dates', models.DateField()),
                ('category', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('leads', models.IntegerField(blank=True, null=True)),
                ('trial', models.IntegerField(blank=True, null=True)),
                ('wins', models.IntegerField(blank=True, null=True)),
                ('total_services', models.IntegerField(blank=True, null=True)),
                ('mrr_expansion', models.IntegerField(blank=True, null=True)),
                ('mrr_newbusiness', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monthly_sales_dashboard',
            },
        ),
        migrations.CreateModel(
            name='MonthlySalesTotalTarget',
            fields=[
                ('total', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('target', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'monthly_sales_total_target',
            },
        ),
        migrations.CreateModel(
            name='NetProfitMargin',
            fields=[
                ('months', models.DateField(primary_key=True, serialize=False)),
                ('year2017', models.FloatField()),
                ('year2018', models.FloatField()),
                ('year2019', models.FloatField()),
                ('year2020', models.FloatField()),
            ],
            options={
                'db_table': 'net_profit_margin',
            },
        ),
        migrations.CreateModel(
            name='Newaccounts',
            fields=[
                ('account_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('account_seats', models.FloatField()),
            ],
            options={
                'db_table': 'newaccounts',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('vs_last_year', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('plan_amount', models.FloatField()),
                ('vs_last_year', models.CharField(max_length=50)),
                ('amount_last_year', models.FloatField()),
            ],
            options={
                'db_table': 'sales',
            },
        ),
        migrations.CreateModel(
            name='ServiceProduct',
            fields=[
                ('tickets', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('amount_last_year', models.FloatField()),
            ],
            options={
                'db_table': 'service_product',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaConversion',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('web_visits', models.IntegerField()),
                ('conversions', models.IntegerField()),
                ('conversions_rate', models.FloatField()),
            ],
            options={
                'db_table': 'social_media_conversion',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaFollowers',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('followers', models.FloatField()),
                ('conversions', models.FloatField()),
                ('conversions_changes', models.FloatField()),
                ('sessions', models.FloatField()),
                ('sessions_changes', models.FloatField()),
                ('conversions_rate', models.FloatField()),
            ],
            options={
                'db_table': 'social_media_followers',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('total', models.FloatField()),
                ('target', models.FloatField()),
            ],
            options={
                'db_table': 'target',
            },
        ),
        migrations.CreateModel(
            name='Total',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('revenue', models.FloatField()),
                ('debt', models.FloatField()),
                ('equity', models.FloatField()),
                ('debt_to_equity', models.FloatField()),
                ('return_to_equity', models.FloatField()),
            ],
            options={
                'db_table': 'total',
            },
        ),
        migrations.CreateModel(
            name='TotalTarget',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('total', models.FloatField()),
                ('target', models.FloatField()),
            ],
            options={
                'db_table': 'total_target',
            },
        ),
        migrations.CreateModel(
            name='Videostat',
            fields=[
                ('items', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('total_social_media_conversions', models.FloatField()),
                ('previous_30days', models.FloatField()),
                ('vs_previous_30days', models.FloatField()),
            ],
            options={
                'db_table': 'videostat',
            },
        ),
        migrations.CreateModel(
            name='Youtube30Days',
            fields=[
                ('dates', models.DateField(primary_key=True, serialize=False)),
                ('channel_views', models.FloatField()),
                ('gain_subscribers', models.FloatField()),
                ('loss_subscribers', models.FloatField()),
                ('bitlys_new_links', models.FloatField()),
                ('bitlys_new_clicks', models.FloatField()),
            ],
            options={
                'db_table': 'youtube30days',
            },
        ),
    ]
